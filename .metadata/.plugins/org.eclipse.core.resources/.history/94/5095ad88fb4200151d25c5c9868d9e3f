'''
Created on Jul 10, 2015

@author: nathaniel, I&E summer 2015
This program use a kalman filer to smooth the Quaternion of the videoray

'''
import kalman_filter
import matplotlib as mpl
from numpy import arctan2, arcsin
mpl.rc("savefig", dpi=150)
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
#import rospy


mpl.rcParams.update({'font.size': 18})
#import and save data from a CSV file

df = pd.DataFrame.from_csv('/home/nathaniel/KingsPointData/15_21_23/pose_only.csv', index_col=None)
# print df
my_x = df['field.orientation.x'].values.tolist()
my_y = df['field.orientation.y'].values.tolist()
my_z = df['field.orientation.z'].values.tolist()
my_w = df['field.orientation.w'].values.tolist()
t = range(0, len(my_x))
print len(t)
print len(my_w)
new_x = []
new_y = []
new_z = []
new_w = []
roll =[]
pitch = []
yaw = []

for i in xrange(len(my_x)):
	q1 = my_y[i]
	q2 = my_x[i]*-1
	q3 = my_z[i]*-1
	q0 = my_w[i]
	roll.append((180/3.14)*arctan2(2*(q0*q1+q2*q3), 1-2*(q1*q1 + q2*q2)))
	pitch.append((180/3.14)*arcsin(2*(q0*q2 - q3*q1)))
	yaw.append((180/3.14)*arctan2(2*(q0*q3+q1*q2), 1-2*(q2*q2 + q3*q3)))
	
	




f3 = plt.figure()
ax3 = f3.add_subplot(111)
#plt.axis([0, len(t), -1.2,1.2 ])
plt.xlabel('Time step')
plt.ylabel('angle')

ax3.scatter(t, roll, color='r',label='x')
ax3.scatter(t, pitch, color='b',label='y')
ax3.scatter(t, yaw, color='g',label='z')


legend = ax3.legend(loc='lower center', shadow=True)
frame = legend.get_frame()
for label in legend.get_texts():
    label.set_fontsize('large')

for label in legend.get_lines():
    label.set_linewidth(1.5)  # the legend line width
plt.show()



